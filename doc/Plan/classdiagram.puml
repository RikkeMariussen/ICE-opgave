@startuml
'https://plantuml.com/class-diagram

class main{
+ static void main(String[] args)
}
class startMenu{
+ runDialog()
}

interface IGames{
String getTitle()
String playGame()
String setHighScore()
String getHighScore()
String keyPressed()
String howToPlay()
String youDied()
String difficulties()
String lives()
}

abstract class AGames{
- title
- score
- lives
}

package Games <<Folder>> {

class BrickBreaker{
- playerPlate
- bricks
- balls
+ String playerPlate()
+ String getBall
+ String move()
+ String getRandomBricks()
}

class BallDrop{
- playerPlate
- balls
- timer
- bombs
+ String playerPlate()
+ String getBalls()
+ String getBombs()
+ String timer()
}

class Snake{
- snake
- apples
- ArrayList(whereSnakeAtX)
- ArrayList(whereSnakeAtY)
+ String snake()
+ String getRandomApples()
+ String eatenApple()
+ String eatenSnake()
}

class PacMan{
- title
- dots
- ghosts
- lives
- score
+ String pacMan()
+ String move()
+ String getRandomGhosts()
}
}

package Utility <<Folder>> {
class GUI{
}
class TextUI{
- Scanner scanner
+ void displayList(ArrayList<String> list)
+ void displayList(ArrayList<String> list, String msg)
+ String promptText(String msg)
+ boolean promptBinary(String msg, String accept, String reject)
+ int promptNumeric(String msg)
+ int promptChoice(ArrayList<String> optionslist, String msg)
+ static void displayMsg(String s)
}
class FileIO{
- ArrayList<String> gameList
- String highScorePath
+ ArrayList<String[]> getGameHighScore(String gameTitle)
+ void loadHighScoreCSV()
- void loadFromCSV()
+ void saveHighScore(String gameTitle, int score, String playerName)
- void saveGameHighScore(String gameTitle, int score, String playerName)
- List<String> modifyScore(String gameTitle, int score, String playerName, List<String> gameData)
- List<String> isGamePresent(List<String> data, String gameTitle)


}
class Input{
}
}

class Balls{
- size
- int x, y, w, h;
- color
+ String drawBalls()
+ String ballsColor()
}

class Bombs{
- size
- int x, y, w, h;
- float speed;
- color
+ void update()
+ void display()
+ void boom()
+ String drawBombs()
}

class Timer{
- int startTimer
- int interval
+ void startTimer()
+ boolean complete()}

class PlayerPlate{
- size
- float x, y, w, h;
- color
+ String playerPlate()
+ void update()
+ void displayPlayerPlate()
}

class SnakeObject{
- size
- color
+ String drawSnake()
}

class PointObject{
'Apples, cheese and cherries for Snake and PacMan
- size
- color
+ String drawPointObject()

}

class Bricks{
- size
- durability
- color
+ String drawBricks()
+ String bricksColor()
+ String bricksDurability()
}

class PacManObject{
- size
- color
+ String drawPacMan()
+ String pacManColor()
}

class Ghosts{
- size
- color
+ void drawGhosts()
+ String ghostsColor()
+ Boolean ghostsKillable()
}

main <-- startMenu
startMenu <- IGames

IGames <|-- AGames

AGames <-- Games
'AGames <|-- Snake
'AGames <|-- BrickBreaker
'AGames <|-- BallDrop
'AGames <|-- PacMan

startMenu <-- Utility
'startMenu <-- GUI
'startMenu <-- TextUI
'startMenu <-- FileIO

BrickBreaker <-- Bricks
BrickBreaker <-- PlayerPlate
BrickBreaker <-- Balls

BallDrop <-- PlayerPlate
BallDrop <-- PointObject
BallDrop <-- Bombs

Snake <-- SnakeObject
Snake <-- PointObject

PacMan <-- PacManObject
PacMan <-- Ghosts
PacMan <-- PointObject

@enduml